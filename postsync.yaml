apiVersion: batch/v1
kind: Job
metadata:
  name: after
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  template:
    spec:
      containers:
      - name: check-sds
        image: registry.redhat.io/openshift4/ose-cli:latest
        command:
          - /bin/bash
          - -c
          - |
            echo "Starting SDS Installation cert"

            sleep 30

            POD_ISTIOD=$(oc get po -l app=istiod -o jsonpath='{.items[0].metadata.name}' -n istio-system)

            oc logs $POD_ISTIOD -n istio-system --since 5m | grep "Push debounce" | grep "for config Secret/istio-system/user1-mesh-external-egress-nginx-client-certs"
            if [ $? -ne 0 ]; then
              echo 'An error occurred istiod load secret'
              exit 1
            fi

            oc logs $POD_ISTIOD -n istio-system --since 5m | grep "Push debounce" | grep "SDS: PUSH request for node:istio-egressgateway" | grep "cached:1/1 filtered:1"
            if [ $? -ne 0 ]; then
              echo 'An error occurred istiod push request'
              exit 1
            fi

            POD_EGRESS=$(oc get po -l app=istio-egressgateway -o jsonpath='{.items[0].metadata.name}' -n istio-system)

            oc logs $POD_EGRESS -n istio-system --since 5m | grep "SDS: PUSH request for node:istio-egressgateway" | grep "resource:default"
            if [ $? -ne 0 ]; then
              echo 'An error occurred egress load cert'
              exit 1
            fi

            oc logs $POD_EGRESS -n istio-system --since 5m | grep "SDS: PUSH request for node:istio-egressgateway" | grep "resource:ROOTCA"
            if [ $? -ne 0 ]; then
              echo 'An error occurred egress load ca cert'
              exit 1
            fi
  
            echo "Finished"

      restartPolicy: Never
  backoffLimit: 0