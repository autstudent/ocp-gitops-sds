apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-nginx-es
  namespace: user1-mesh-external
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      run: my-nginx-es
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: my-nginx-es
    spec:
      containers:
      - image: nginx
        imagePullPolicy: Always
        name: my-nginx-es
        ports:
        - containerPort: 443
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/nginx
          name: nginx-config
          readOnly: true
        - mountPath: /etc/nginx-server-certs
          name: nginx-server-certs
          readOnly: true
        - mountPath: /etc/nginx-ca-certs
          name: nginx-ca-certs
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: nginx-es
      serviceAccountName: nginx-es
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: nginx-configmap
        name: nginx-config
      - name: nginx-server-certs
        secret:
          defaultMode: 420
          secretName: nginx-server-certs-es
      - name: nginx-ca-certs
        secret:
          defaultMode: 420
          secretName: nginx-ca-certs-es