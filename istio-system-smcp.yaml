apiVersion: maistra.io/v2
kind: ServiceMeshControlPlane
metadata:
  name: basic
  namespace: istio-system
spec:
  addons:
    grafana:
      enabled: true
    jaeger:
      install:
        storage:
          type: Memory
    kiali:
      enabled: true
    prometheus:
      enabled: true
  gateways:
    additionalEgress:
      egress-mx:
        enabled: true
        namespace: egress-mx
      egress-es:
        enabled: true
        namespace: egress-es
    egress:
      enabled: true
      runtime:
        deployment:
          replicas: 1
      service: {}
    enabled: true
    ingress:
      enabled: true
      runtime:
        deployment:
          replicas: 1
      service: {}
    openshiftRoute:
      enabled: false
  policy:
    type: Istiod
  profiles:
  - default
  runtime:
    components:
      pilot:
        deployment:
          replicas: 1
  telemetry:
    type: Istiod
  tracing:
    sampling: 10000
    type: Jaeger
  version: v2.4
status:
  annotations:
    alwaysReadyComponents: mesh-config,telemetry-common,tracing,kiali
    readyComponentCount: 9/9
  appliedSpec:
    addons:
      grafana:
        enabled: true
        install:
          service:
            ingress:
              enabled: true
            metadata:
              annotations:
                service.alpha.openshift.io/serving-cert-secret-name: grafana-tls
      jaeger:
        install:
          ingress:
            enabled: true
          storage:
            type: Memory
        name: jaeger
      kiali:
        enabled: true
        install:
          dashboard:
            viewOnly: false
          service:
            ingress:
              enabled: true
        name: kiali
      prometheus:
        enabled: true
        install:
          service:
            ingress:
              enabled: true
            metadata:
              annotations:
                service.alpha.openshift.io/serving-cert-secret-name: prometheus-tls
    gateways:
      egress:
        enabled: true
        runtime:
          container:
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
          deployment:
            autoScaling:
              enabled: false
            replicas: 1
        service: {}
      enabled: true
      ingress:
        enabled: true
        ingress: false
        runtime:
          container:
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
          deployment:
            autoScaling:
              enabled: false
            replicas: 1
        service:
          type: ClusterIP
      openshiftRoute:
        enabled: false
    general:
      logging:
        componentLevels:
          default: warn
    policy:
      type: Istiod
    profiles:
    - default
    proxy:
      injection:
        autoInject: false
      networking:
        dns:
          refreshRate: 300s
        initialization:
          initContainer:
            runtime:
              imageName: proxy-init-rhel7
        protocol:
          autoDetect:
            inbound: false
            outbound: false
      runtime:
        container:
          imageName: registry.redhat.io/openshift-service-mesh/proxyv2-rhel8@sha256:bf693eaa845373e1a06041626a9314ec00519a6fd2437b12f7f4f3f104864039
          resources:
            requests:
              cpu: 10m
              memory: 128Mi
    runtime:
      components:
        3scale:
          container:
            imageRegistry: registry.redhat.io/openshift-service-mesh
            imageTag: 2.0.0
        global.oauthproxy:
          container:
            imageName: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d7f9e38f989730cfe26ca5c15af9cfe4ff4c22264dad2b41a783950c3355cf84
            imagePullPolicy: IfNotPresent
            imageRegistry: registry.redhat.io/openshift4
            imageTag: v4.9
        grafana:
          container:
            imageName: registry.redhat.io/openshift-service-mesh/grafana-rhel8@sha256:61d21797c6b4f21e895f5008e7e704e7b042ce0d06e14118b943b0e2736eaa65
        pilot:
          container:
            imageName: registry.redhat.io/openshift-service-mesh/pilot-rhel8@sha256:c42f2002de20f75eca9e63d2a052addedc75d65d70390c7c8875de1d263dedb8
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
          deployment:
            autoScaling:
              enabled: false
            replicas: 1
        prometheus:
          container:
            imageName: registry.redhat.io/openshift4/ose-prometheus@sha256:cc3ce5535d7b366ac59c4874299d4425b59e5ce8edaae701cf38f83e93408943
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
        rateLimiting.rls:
          container:
            imageName: registry.redhat.io/openshift-service-mesh/ratelimit-rhel8@sha256:bd56f6755d6f613f26612222b196efc551a4694feec80739d09d03c996f9669f
      defaults:
        container:
          imageRegistry: registry.redhat.io/openshift-service-mesh
          imageTag: 2.4.0
          resources:
            requests:
              cpu: 10m
              memory: 128Mi
        deployment:
          podDisruption:
            enabled: false
    security:
      identity:
        type: Kubernetes
    techPreview:
      global:
        configNamespace: istio-system
        configRootNamespace: istio-system
        istioNamespace: istio-system
        prometheusNamespace: istio-system
      istio_cni:
        istio_cni_network: v2-4-istio-cni
      kiali:
        install: true
      meshConfig:
        defaultConfig:
          tracing:
            zipkin:
              address: jaeger-collector.istio-system.svc:9411
        ingressControllerMode: "OFF"
        rootNamespace: istio-system
      prometheus:
        scrapingNamespaces:
        - jump-app-dev
        - mesh-test
      prometheusConfigReloader:
        image: registry.redhat.io/openshift4/ose-prometheus-config-reloader@sha256:d43acff570deec0eb9fa8066bf4274dfdbd56436faf0d468a9c1cd4bd9a7efc1
      revision: basic
      sidecarInjectorWebhook:
        objectSelector:
          enabled: false
      tracing:
        jaeger:
          install: true
    telemetry:
      type: Istiod
    tracing:
      sampling: 10000
      type: Jaeger
    version: v2.4
  appliedValues:
    istio:
      base:
        validationURL: ""
      clusterResources: true
      gatewayAPI:
        controllerMode: false
        enabled: false
      gateways:
        enabled: true
        istio-egressgateway:
          autoscaleEnabled: false
          enabled: true
          gatewayType: egress
          name: istio-egressgateway
          replicaCount: 1
          resources:
            requests:
              cpu: 10m
              memory: 128Mi
        istio-ingressgateway:
          autoscaleEnabled: false
          enabled: true
          gatewayType: ingress
          ior_enabled: false
          name: istio-ingressgateway
          replicaCount: 1
          resources:
            requests:
              cpu: 10m
              memory: 128Mi
          type: ClusterIP
      global:
        arch:
          amd64: 2
          arm64: 2
          ppc64le: 2
          s390x: 2
        caAddress: ""
        caCertConfigMapName: istio-ca-root-cert
        centralIstiod: false
        configNamespace: istio-system
        configRootNamespace: istio-system
        configValidation: true
        defaultConfigVisibilitySettings: []
        defaultNodeSelector: {}
        defaultPodDisruptionBudget:
          enabled: false
        defaultResources:
          requests:
            cpu: 10m
            memory: 128Mi
        defaultTolerations: []
        enableTracing: true
        externalIstiod: false
        hub: registry.redhat.io/openshift-service-mesh
        imagePullPolicy: ""
        imagePullSecrets: []
        istioNamespace: istio-system
        istiod:
          enableAnalysis: false
        jwtPolicy: first-party-jwt
        k8sIngress:
          enableHttps: false
          enabled: false
          gatewayName: ingressgateway
        logAsJson: false
        logging:
          level: default:warn
        manageNetworkPolicy: true
        meshExpansion:
          enabled: false
          useILB: false
        meshID: ""
        meshNetworks: {}
        mountMtlsCerts: false
        mtls:
          auto: true
          enabled: false
        multiCluster:
          clusterName: ""
          enabled: false
          globalDomainSuffix: global
          includeEnvoyFilter: true
          multiClusterOverrides:
            expansionEnabled: null
            multiClusterEnabled: null
        network: ""
        oauthproxy:
          hub: registry.redhat.io/openshift4
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d7f9e38f989730cfe26ca5c15af9cfe4ff4c22264dad2b41a783950c3355cf84
          imagePullPolicy: IfNotPresent
          tag: v4.9
        omitSidecarInjectorConfigMap: false
        oneNamespace: false
        operatorManageWebhooks: false
        pilotCertProvider: istiod
        priorityClassName: ""
        prometheusNamespace: istio-system
        proxy:
          autoInject: disabled
          clusterDomain: cluster.local
          componentLogLevel: misc:error
          dnsRefreshRate: 300s
          enableCoreDump: false
          excludeIPRanges: ""
          excludeInboundPorts: ""
          excludeOutboundPorts: ""
          image: registry.redhat.io/openshift-service-mesh/proxyv2-rhel8@sha256:bf693eaa845373e1a06041626a9314ec00519a6fd2437b12f7f4f3f104864039
          includeIPRanges: '*'
          includeInboundPorts: '*'
          logLevel: warning
          privileged: false
          readinessFailureThreshold: 30
          readinessInitialDelaySeconds: 1
          readinessPeriodSeconds: 2
          resources:
            limits:
              cpu: 2000m
              memory: 1024Mi
            requests:
              cpu: 10m
              memory: 128Mi
          statusPort: 15021
          tracer: zipkin
        proxy_init:
          image: proxy-init-rhel7
          resources:
            limits:
              cpu: 2000m
              memory: 1024Mi
            requests:
              cpu: 10m
              memory: 10Mi
        remotePilotAddress: ""
        sds:
          token:
            aud: istio-ca
        sts:
          servicePort: 0
        tag: 2.4.0
        tls:
          cipherSuites: []
          ecdhCurves: []
          maxProtocolVersion: ""
          minProtocolVersion: ""
        tracer:
          datadog:
            address: $(HOST_IP):8126
          lightstep:
            accessToken: ""
            address: ""
          stackdriver:
            debug: false
            maxNumberOfAnnotations: 200
            maxNumberOfAttributes: 200
            maxNumberOfMessageEvents: 200
          zipkin:
            address: ""
        trustDomain: ""
        useMCP: false
      grafana:
        enabled: true
        image: registry.redhat.io/openshift-service-mesh/grafana-rhel8@sha256:61d21797c6b4f21e895f5008e7e704e7b042ce0d06e14118b943b0e2736eaa65
        ingress:
          enabled: true
        service:
          annotations:
            service.alpha.openshift.io/serving-cert-secret-name: grafana-tls
      istio_cni:
        enabled: true
        istio_cni_network: v2-4-istio-cni
      kiali:
        dashboard:
          viewOnlyMode: false
        enabled: true
        ingress:
          enabled: true
        install: true
        resourceName: kiali
      meshConfig:
        defaultConfig:
          proxyMetadata:
            ISTIO_META_DNS_AUTO_ALLOCATE: "true"
            ISTIO_META_DNS_CAPTURE: "true"
            PROXY_XDS_VIA_AGENT: "true"
          tracing:
            zipkin:
              address: jaeger-collector.istio-system.svc:9411
        dnsRefreshRate: 300s
        enablePrometheusMerge: true
        enableTracing: true
        ingressControllerMode: "OFF"
        rootNamespace: istio-system
      mixer:
        adapters:
          prometheus:
            enabled: true
        policy:
          enabled: false
        telemetry:
          enabled: false
      pilot:
        autoscaleEnabled: false
        enableProtocolSniffingForInbound: false
        enableProtocolSniffingForOutbound: false
        image: registry.redhat.io/openshift-service-mesh/pilot-rhel8@sha256:c42f2002de20f75eca9e63d2a052addedc75d65d70390c7c8875de1d263dedb8
        replicaCount: 1
        resources:
          requests:
            cpu: 10m
            memory: 128Mi
        traceSampling: 100
      policy:
        implementation: Istiod
      prometheus:
        enabled: true
        image: registry.redhat.io/openshift4/ose-prometheus@sha256:cc3ce5535d7b366ac59c4874299d4425b59e5ce8edaae701cf38f83e93408943
        ingress:
          enabled: true
        resources:
          requests:
            cpu: 10m
            memory: 128Mi
        scrapingNamespaces:
        - jump-app-dev
        - mesh-test
        service:
          annotations:
            service.alpha.openshift.io/serving-cert-secret-name: prometheus-tls
      prometheusConfigReloader:
        image: registry.redhat.io/openshift4/ose-prometheus-config-reloader@sha256:d43acff570deec0eb9fa8066bf4274dfdbd56436faf0d468a9c1cd4bd9a7efc1
      rateLimiting:
        rls:
          image: registry.redhat.io/openshift-service-mesh/ratelimit-rhel8@sha256:bd56f6755d6f613f26612222b196efc551a4694feec80739d09d03c996f9669f
      revision: basic
      sidecarInjectorWebhook:
        enableNamespacesByDefault: false
        objectSelector:
          enabled: false
      telemetry:
        enabled: true
        implementation: Istiod
        v1:
          enabled: false
        v2:
          accessLogPolicy:
            enabled: false
            logWindowDuration: 43200s
          enabled: true
          metadataExchange:
            wasmEnabled: false
          prometheus:
            configOverride:
              gateway: {}
              inboundSidecar: {}
              outboundSidecar: {}
            enabled: true
            wasmEnabled: false
          stackdriver:
            configOverride: {}
            disableOutbound: false
            enabled: false
            logging: false
            monitoring: false
            topology: false
      tracing:
        enabled: true
        ingress:
          enabled: true
        jaeger:
          install: true
          resourceName: jaeger
          template: all-in-one
        provider: jaeger
    profiles:
    - default
    template: default
    threeScale:
      hub: registry.redhat.io/openshift-service-mesh
      image: ""
      tag: 2.0.0
    version: v2.4
  chartVersion: 2.4.5
  components:
  - conditions:
    - lastTransitionTime: "2024-03-05T13:19:33Z"
      message: Successfully reconciled
      reason: ReconcileSuccessful
      status: "True"
      type: Reconciled
    - lastTransitionTime: "2024-03-05T12:31:08Z"
      message: Component installed successfully
      reason: InstallSuccessful
      status: "True"
      type: Installed
    resource: istio-discovery
  - conditions:
    - lastTransitionTime: "2024-03-05T13:19:35Z"
      message: Successfully reconciled
      reason: ReconcileSuccessful
      status: "True"
      type: Reconciled
    - lastTransitionTime: "2024-03-05T12:31:15Z"
      message: Component installed successfully
      reason: InstallSuccessful
      status: "True"
      type: Installed
    resource: mesh-config
  - conditions:
    - lastTransitionTime: "2024-03-05T13:19:35Z"
      message: Successfully reconciled
      reason: ReconcileSuccessful
      status: "True"
      type: Reconciled
    - lastTransitionTime: "2024-03-05T12:31:15Z"
      message: Component installed successfully
      reason: InstallSuccessful
      status: "True"
      type: Installed
    resource: telemetry-common
  - conditions:
    - lastTransitionTime: "2024-03-05T13:19:35Z"
      message: Successfully reconciled
      reason: ReconcileSuccessful
      status: "True"
      type: Reconciled
    - lastTransitionTime: "2024-03-05T12:31:15Z"
      message: Component installed successfully
      reason: InstallSuccessful
      status: "True"
      type: Installed
    resource: prometheus
  - conditions:
    - lastTransitionTime: "2024-03-05T13:19:37Z"
      message: Successfully reconciled
      reason: ReconcileSuccessful
      status: "True"
      type: Reconciled
    - lastTransitionTime: "2024-03-05T12:31:31Z"
      message: Component installed successfully
      reason: InstallSuccessful
      status: "True"
      type: Installed
    resource: tracing
  - conditions:
    - lastTransitionTime: "2024-03-05T13:19:37Z"
      message: Successfully reconciled
      reason: ReconcileSuccessful
      status: "True"
      type: Reconciled
    - lastTransitionTime: "2024-03-05T12:31:31Z"
      message: Component installed successfully
      reason: InstallSuccessful
      status: "True"
      type: Installed
    resource: istio-ingress
  - conditions:
    - lastTransitionTime: "2024-03-05T13:19:37Z"
      message: Successfully reconciled
      reason: ReconcileSuccessful
      status: "True"
      type: Reconciled
    - lastTransitionTime: "2024-03-05T12:31:31Z"
      message: Component installed successfully
      reason: InstallSuccessful
      status: "True"
      type: Installed
    resource: istio-egress
  - conditions:
    - lastTransitionTime: "2024-03-05T13:19:38Z"
      message: Successfully reconciled
      reason: ReconcileSuccessful
      status: "True"
      type: Reconciled
    - lastTransitionTime: "2024-03-05T12:31:32Z"
      message: Component installed successfully
      reason: InstallSuccessful
      status: "True"
      type: Installed
    resource: grafana
  - conditions:
    - lastTransitionTime: "2024-03-05T13:19:40Z"
      message: Successfully reconciled
      reason: ReconcileSuccessful
      status: "True"
      type: Reconciled
    - lastTransitionTime: "2024-03-05T12:31:42Z"
      message: Component installed successfully
      reason: InstallSuccessful
      status: "True"
      type: Installed
    resource: kiali
  conditions:
  - lastTransitionTime: "2024-03-05T12:31:43Z"
    message: Successfully installed all mesh components
    reason: InstallSuccessful
    status: "True"
    type: Installed
  - lastTransitionTime: "2024-03-05T13:19:40Z"
    message: Successfully updated from version 2.4.5-1-2 to version 2.4.5-1-3
    reason: UpdateSuccessful
    status: "True"
    type: Reconciled
  - lastTransitionTime: "2024-03-06T08:58:19Z"
    message: All component deployments are Available
    reason: ComponentsReady
    status: "True"
    type: Ready
  observedGeneration: 3
  operatorVersion: 2.4.5-1
  readiness:
    components:
      pending: []
      ready:
      - grafana
      - istio-discovery
      - istio-egress
      - istio-ingress
      - kiali
      - mesh-config
      - prometheus
      - telemetry-common
      - tracing
      unready: []
